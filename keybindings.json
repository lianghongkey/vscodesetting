// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+-",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+=",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "ctrl+c",
        "command": "editor.action.clipboardCopyAction",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+x",
        "command": "editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+f",
        "command": "actions.find"
    },
    {
        "key": "ctrl+n",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+/",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+=",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "ctrl+z",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+z",
        "command": "redo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+j",
        "command": "cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+h",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.search.toggleQueryDetails",
        "when": "searchViewletVisible"
    },
    {
        "key": "ctrl+,",
        "command": "workbench.action.openSettings"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+shift+-",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+[",
        "command": "editor.foldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+]",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.terminal.findNextTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.terminal.findPreviousTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.terminal.newInActiveWorkspace"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.terminal.kill"
    },
    {
        "key": "ctrl+shift+]",
        "command": "workbench.action.terminal.focusNext"
    },
    {
        "key": "ctrl+shift+[",
        "command": "workbench.action.terminal.focusPrevious"
    },
    {
        "key": "shift+escape",
        "command": "search.action.clearSearchResults"
    },
    {
        "key": "ctrl+shift+n",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "ctrl+4",
        "command": "workbench.action.openEditorAtIndex4"
    },
    {
        "key": "ctrl+5",
        "command": "workbench.action.openEditorAtIndex5"
    },
    {
        "key": "ctrl+6",
        "command": "workbench.action.openEditorAtIndex6"
    },
    {
        "key": "ctrl+7",
        "command": "workbench.action.openEditorAtIndex7"
    },
    {
        "key": "ctrl+8",
        "command": "workbench.action.openEditorAtIndex8"
    },
    {
        "key": "ctrl+9",
        "command": "workbench.action.openEditorAtIndex9"
    },
    {
        "key": "ctrl+0",
        "command": "workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.debug.start",
        "when": "!inDebugMode"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+n",
        "command": "extension.node-debug.startWithStopOnEntry",
        "when": "!inDebugMode && debugConfigurationType == 'node'"
    },
]
